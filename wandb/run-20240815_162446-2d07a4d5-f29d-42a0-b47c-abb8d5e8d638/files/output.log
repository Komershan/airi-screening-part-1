[34m[1mwandb[39m[22m: [33mWARNING[39m Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/cuda/__init__.py:619: UserWarning: Can't initialize NVML
  warnings.warn("Can't initialize NVML")
/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/gymnasium/core.py:311: UserWarning: [33mWARN: env.set_seed to get variables from other wrappers is deprecated and will be removed in v1.0, to get this variable you can do `env.unwrapped.set_seed` for environment variables or `env.get_wrapper_attr('set_seed')` that will search the reminding wrappers.
  logger.warn(
  0%|                                                                                                                     | 0/20000 [00:00<?, ?it/s]
[40  1  0 31  1  0 22  1  0 13  2  0 14  1  1  5  2  0  6  3  0 15  1  0
  6  0  0  6  1  0  6  2  0  7  1  0  7  1  0  7  1  0  7  3  0 16  1  0
  7  1  0  7  3  0 16  3  0 25  1  0]
[40  1  0 31  1  0 22  1  0 13  2  0 14  2  0 15  1  0  6  1  0  6  2  0
  7  4  0  6  2  0  7  4  0  6  4  1  5  4  0  4  1  0  4  4  0  3  4  0
  2  2  0  3  1  0  3  2  0  4  1  0]
[40  4  0 39  1  0 30  4  0 29  2  0 30  1  0 21  4  0 20  2  0 21  2  0
 22  4  0 21  2  0 22  4  0 21  4  0 20  1  0 11  2  0 12  4  0 11  4  0
 10  2  0 11  2  0 12  1  0  3  2  0]
[40  4  0 39  1  0 30  1  0 21  2  0 22  1  0 13  4  0 12  1  0  3  1  0
  3  1  0  3  2  0  4  4  0  3  1  0  3  1  0  3  1  0  3  4  0  2  4  0
  1  2  0  2  1  0  2  2  0  3  4  0]
[40  2  0 41  2  0 42  2  0 43  2  0 44  2  0 44  2  0 44  2  0 44  2  0
 44  2  0 44  2  0 44  2  0 44  2  0 44  2  0 44  2  0 44  2  0 44  2  0
 44  2  0 44  2  0 44  2  0 44  2  0]
[40  2  0 41  2  0 42  2  0 43  2  0 44  2  0 44  1  0 35  2  0 35  2  0
 35  2  0 35  3  0 44  2  0 44  2  0 44  2  0 44  2  0 44  2  0 44  2  0
 44  2  0 44  2  0 44  2  0 44  2  0]
[40  2  0 41  0  0 41  0  0 41  0  0 41  2  0 42  2  0 43  2  0 44  1  0
 35  1  0 26  0  0 26  0  0 26  0  0 26  2  0 26  2  0 26  4  0 25  4  0
 24  0  0 24  1  0 15  0  0 15  2  0]
[40  1  0 31  2  0 32  4  0 31  0  0 31  2  0 32  0  0 32  0  0 32  1  0
 23  2  0 24  2  0 25  1  0 16  0  0 16  4  0 15  2  0 16  0  0 16  4  0
 15  0  0 15  2  0 16  3  0 25  2  0]
[40  2  0 41  2  0 42  4  0 41  4  0 40  1  0 31  4  0 30  2  0 31  1  0
 22  4  0 21  2  0 22  4  0 21  2  0 22  1  0 13  1  0  4  2  1  5  1  1
  5  1  1  5  2  0  6  2  0  7  4  0]
[40  1  0 31  1  0 22  0  0 22  3  0 31  0  0 31  4  0 30  2  0 31  1  0
 22  2  0 23  1  0 14  0  0 14  4  0 13  4  0 12  1  0  3  0  0  3  2  0
  4  4  0  3  3  0 12  4  0 11  4  0]
[40  4  0 39  0  0 39  0  0 39  0  0 39  2  0 40  0  0 40  0  0 40  0  0
 40  4  0 39  4  0 38  2  0 39  4  0 38  2  0 39  0  0 39  0  0 39  0  0
 39  2  0 40  1  0 31  0  0 31  0  0]
[40  0  0 40  0  0 40  0  0 40  4  0 39  2  0 40  2  0 41  0  0 41  0  0
 41  0  0 41  4  0 40  2  0 41  2  0 42  4  0 41  1  0 32  0  0 32  4  0
 31  0  0 31  0  0 31  0  0 31  1  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  4  0 39  2  0 40  0  0 40  1  0
 31  0  0 31  4  0 30  4  0 29  1  0 20  2  0 21  0  0 21  0  0 21  4  0
 20  0  0 20  2  0 21  0  0 21  0  0]
[40  1  0 31  4  0 30  4  0 29  4  0 28  3  0 37  1  0 28  1  0 19  0  0
 19  2  0 20  1  0 11  2  0 12  4  0 11  0  0 11  1  0  2  2  0  3  2  0
  4  1  0  4  0  0  4  3  0 13  1  0]
[40  0  0 40  2  0 41  0  0 41  2  0 42  1  0 33  0  0 33  0  0 33  4  0
 32  4  0 31  1  0 22  0  0 22  4  0 21  0  0 21  1  0 12  1  0  3  0  0
  3  4  0  2  3  0 11  0  0 11  0  0]
[40  2  0 41  4  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  2  0
 41  4  0 40  0  0 40  0  0 40  0  0 40  0  0 40  2  0 41  0  0 41  1  0
 32  4  0 31  0  0 31  1  0 22  4  0]
[40  1  0 31  3  0 40  0  0 40  0  0 40  4  0 39  0  0 39  0  0 39  0  0
 39  1  0 30  0  0 30  0  0 30  4  0 29  2  0 30  1  0 21  3  0 30  1  0
 21  0  0 21  3  0 30  0  0 30  0  0]
[40  0  0 40  4  0 39  2  0 40  4  0 39  3  0 48  1  0 39  2  0 40  2  0
 41  0  0 41  4  0 40  0  0 40  2  0 41  0  0 41  4  0 40  2  0 41  0  0
 41  1  0 32  2  0 33  2  0 34  3  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  2  0 41  4  0 40  0  0 40  3  0
 49  4  0 48  0  0 48  2  0 49  4  0 48  0  0 48  2  0 49  4  0 48  1  0
 39  4  0 38  0  0 38  4  0 37  4  0]
[40  0  0 40  1  0 31  3  0 40  4  0 39  0  0 39  0  0 39  2  0 40  1  0
 31  2  0 32  0  0 32  0  0 32  1  0 23  4  0 22  2  0 23  4  0 22  0  0
 22  3  0 31  0  0 31  4  0 30  3  0]
[40  0  0 40  2  0 41  1  0 32  3  0 41  0  0 41  0  0 41  3  0 50  1  0
 41  0  0 41  0  0 41  0  0 41  3  0 50  0  0 50  3  0 59  1  0 50  3  0
 59  0  0 59  4  0 58  0  0 58  0  0]
[40  0  0 40  0  0 40  2  0 41  3  0 50  1  0 41  1  0 32  1  0 23  1  0
 14  3  0 23  3  0 32  4  0 31  4  0 30  1  0 21  0  0 21  0  0 21  1  0
 12  3  0 21  1  0 12  0  0 12  4  0]
[40  3  0 49  0  0 49  0  0 49  4  0 48  0  0 48  0  0 48  0  0 48  2  0
 49  0  0 49  0  0 49  1  0 40  0  0 40  1  0 31  4  0 30  2  0 31  3  0
 40  1  0 31  1  0 22  0  0 22  0  0]
[40  4  0 39  0  0 39  1  0 30  1  0 21  4  0 20  4  0 19  1  0 10  2  0
 11  3  0 20  4  0 19  0  0 19  1  0 10  2  0 11  1  0  2  3  0 11  0  0
 11  0  0 11  2  0 12  0  0 12  3  0]
[40  0  0 40  1  0 31  2  0 32  3  0 41  1  0 32  4  0 31  4  0 30  2  0
 31  0  0 31  1  0 22  2  0 23  2  0 24  0  0 24  4  0 23  0  0 23  0  0
 23  0  0 23  2  0 24  4  0 23  1  0]
[40  0  0 40  2  0 41  3  0 50  0  0 50  4  0 49  1  0 40  2  0 41  1  0
 32  1  0 23  1  0 14  2  0 15  2  0 16  3  0 25  0  0 25  3  0 34  1  0

  0%|▏                                                                                                           | 27/20000 [00:03<20:02, 16.61it/s]
[40  0  0 40  3  0 49  1  0 40  0  0 40  0  0 40  1  0 31  2  0 32  0  0
 32  3  0 41  1  0 32  2  0 33  3  0 42  4  0 41  0  0 41  2  0 42  0  0
 42  2  0 43  1  0 34  1  0 25  4  0]
[40  0  0 40  0  0 40  0  0 40  1  0 31  2  0 32  0  0 32  3  0 41  0  0
 41  0  0 41  2  0 42  0  0 42  4  0 41  2  0 42  2  0 43  0  0 43  1  0
 34  0  0 34  0  0 34  1  0 25  3  0]
[40  0  0 40  3  0 49  2  0 50  4  0 49  0  0 49  3  0 58  3  0 67  3  0
 76  1  0 67  0  0 67  0  0 67  2  0 68  2  0 69  0  0 69  2  0 70  1  0
 61  2  0 62  4  0 61  0  0 61  1  0]
[40  1  0 31  3  0 40  1  0 31  2  0 32  1  0 23  2  0 24  2  0 25  3  0
 34  2  0 35  2  0 35  4  0 34  1  0 25  2  0 26  2  0 26  2  0 26  2  0
 26  1  0 17  2  0 17  1  0  8  2  0]
[40  0  0 40  2  0 41  1  0 32  0  0 32  2  0 33  2  0 34  0  0 34  3  0
 43  1  0 34  1  0 25  0  0 25  2  0 26  1  0 17  4  0 16  0  0 16  4  0
 15  0  0 15  4  0 14  2  0 15  0  0]
[40  1  0 31  3  0 40  3  0 49  1  0 40  0  0 40  0  0 40  2  0 41  0  0
 41  3  0 50  1  0 41  2  0 42  0  0 42  4  0 41  2  0 42  0  0 42  1  0
 33  2  0 34  4  0 33  0  0 33  0  0]
[40  1  0 31  3  0 40  4  0 39  1  0 30  2  0 31  1  0 22  1  0 13  0  0
 13  2  0 14  2  0 15  4  0 14  4  0 13  3  0 22  3  0 31  2  0 32  1  0
 23  3  0 32  0  0 32  2  0 33  1  0]
[40  4  0 39  0  0 39  1  0 30  4  0 29  3  0 38  1  0 29  1  0 20  0  0
 20  2  0 21  1  0 12  4  0 11  4  0 10  2  0 11  2  0 12  2  0 13  0  0
 13  4  0 12  2  0 13  0  0 13  3  0]
[40  1  0 31  1  0 22  1  0 13  4  0 12  3  0 21  2  0 22  3  0 31  1  0
 22  2  0 23  0  0 23  3  0 32  1  0 23  2  0 24  0  0 24  3  0 33  0  0
 33  2  0 34  1  0 25  0  0 25  1  0]
[40  1  0 31  1  0 22  0  0 22  2  0 23  0  0 23  4  0 22  2  0 23  2  0
 24  0  0 24  1  0 15  1  0  6  1  0  6  2  0  7  0  0  7  0  0  7  0  0
  7  0  0  7  0  0  7  2  0  8  3  0]
[40  1  0 31  0  0 31  4  0 30  4  0 29  2  0 30  2  0 31  2  0 32  0  0
 32  1  0 23  2  0 24  0  0 24  3  0 33  2  0 34  0  0 34  3  0 43  3  0
 52  2  0 53  2  0 53  0  0 53  4  0]
[40  1  0 31  3  0 40  3  0 49  0  0 49  2  0 50  4  0 49  0  0 49  0  0
 49  0  0 49  3  0 58  1  0 49  2  0 50  0  0 50  0  0 50  1  0 41  2  0
 42  3  0 51  1  0 42  2  0 43  0  0]
[40  2  0 41  0  0 41  0  0 41  1  0 32  3  0 41  2  0 42  3  0 51  2  0
 52  2  0 53  0  0 53  0  0 53  0  0 53  2  0 53  1  0 44  4  0 43  1  0
 34  4  0 33  4  0 32  2  0 33  1  0]
[40  4  0 39  0  0 39  0  0 39  0  0 39  1  0 30  0  0 30  2  0 31  4  0
 30  2  0 31  0  0 31  2  0 32  1  0 23  3  0 32  0  0 32  4  0 31  4  0
 30  0  0 30  4  0 29  2  0 30  0  0]
[40  3  0 49  2  0 50  0  0 50  0  0 50  4  0 49  3  0 58  2  0 59  1  0
 50  2  0 51  0  0 51  4  0 50  1  0 41  2  0 42  2  0 43  4  0 42  4  0
 41  0  0 41  1  0 32  3  0 41  3  0]
[40  3  0 49  0  0 49  0  0 49  0  0 49  3  0 58  1  0 49  2  0 50  1  0
 41  1  0 32  3  0 41  4  0 40  0  0 40  0  0 40  4  0 39  0  0 39  0  0
 39  4  0 38  0  0 38  0  0 38  0  0]
[40  3  0 49  2  0 50  2  0 51  1  0 42  0  0 42  0  0 42  4  0 41  4  0
 40  2  0 41  4  0 40  2  0 41  1  0 32  2  0 33  1  0 24  1  0 15  0  0
 15  1  0  6  3  0 15  2  0 16  4  0]
[40  0  0 40  3  0 49  0  0 49  2  0 50  0  0 50  4  0 49  1  0 40  3  0
 49  1  0 40  0  0 40  2  0 41  4  0 40  0  0 40  2  0 41  0  0 41  1  0
 32  2  0 33  3  0 42  1  0 33  4  0]
[40  0  0 40  2  0 41  0  0 41  1  0 32  2  0 33  4  0 32  4  0 31  1  0
 22  0  0 22  3  0 31  4  0 30  1  0 21  1  0 12  2  0 13  3  0 22  0  0
 22  1  0 13  1  0  4  0  0  4  1  0]
[40  2  0 41  3  0 50  4  0 49  0  0 49  1  0 40  2  0 41  2  0 42  4  0
 41  2  0 42  2  0 43  0  0 43  1  0 34  0  0 34  4  0 33  2  0 34  4  0
 33  1  0 24  0  0 24  2  0 25  4  0]
[40  4  0 39  4  0 38  0  0 38  1  0 29  1  0 20  0  0 20  1  0 11  0  0
 11  4  0 10  2  0 11  0  0 11  1  0  2  3  0 11  3  0 20  4  0 19  1  0
 10  0  0 10  0  0 10  2  0 11  2  0]
[40  4  0 39  0  0 39  2  0 40  0  0 40  1  0 31  1  0 22  0  0 22  3  0
 31  4  0 30  0  0 30  2  0 31  1  0 22  1  0 13  3  0 22  1  0 13  4  0
 12  4  0 11  0  0 11  2  0 12  0  0]
[40  4  0 39  4  0 38  4  0 37  2  0 38  0  0 38  1  0 29  1  0 20  2  0
 21  3  0 30  1  0 21  4  0 20  3  0 29  0  0 29  1  0 20  2  0 21  1  0
  0%|▎                                                                                                           | 49/20000 [00:04<31:27, 10.57it/s]
Traceback (most recent call last):
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/./scripts/data_generation.py", line 197, in <module>
    main()
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/./scripts/data_generation.py", line 186, in main
    train_tasks = generate_histories(
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/./scripts/data_generation.py", line 63, in generate_histories
    curr_history = generator.train_from_model(
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/algorithms/generation_baselines/a2c.py", line 132, in train_from_model
    model, histories = train(config, environment)
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/algorithms/generation_baselines/a2c.py", line 310, in train
    parallel_results = pool.map(calc_loss_on_episode, args)
  File "/usr/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/usr/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/usr/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/usr/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/usr/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
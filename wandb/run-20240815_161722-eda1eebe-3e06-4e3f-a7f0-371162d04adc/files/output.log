[34m[1mwandb[39m[22m: [33mWARNING[39m Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/cuda/__init__.py:619: UserWarning: Can't initialize NVML
  warnings.warn("Can't initialize NVML")
/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/gymnasium/core.py:311: UserWarning: [33mWARN: env.set_seed to get variables from other wrappers is deprecated and will be removed in v1.0, to get this variable you can do `env.unwrapped.set_seed` for environment variables or `env.get_wrapper_attr('set_seed')` that will search the reminding wrappers.
  logger.warn(
  0%|                                                                                                                     | 0/20000 [00:00<?, ?it/s]
[40  1  0 31  1  0 22  1  0 13  2  0 14  0  0 14  1  1  5  0  1  5  3  0
 14  1  1  5  1  1  5  1  1  5  1  1  5  1  1  5  3  0 14  1  1  5  3  0
 14  4  0 13  2  0 14  1  1  5  1  1]
[40  1  0 31  1  0 22  1  0 13  0  0 13  1  0  4  4  0  3  0  0  3  2  0
  4  4  0  3  0  0  3  4  0  2  0  0  2  4  0  1  3  0 10  1  0  1  3  0
 10  0  0 10  1  0  1  3  0 10  3  0]
[40  0  0 40  0  0 40  0  0 40  1  0 31  0  0 31  0  0 31  0  0 31  0  0
 31  1  0 22  0  0 22  0  0 22  0  0 22  0  0 22  0  0 22  1  0 13  2  0
 14  2  0 15  0  0 15  0  0 15  0  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0
 40  0  0 40  1  0 31  0  0 31  4  0 30  0  0 30  0  0 30  3  0 39  0  0
 39  0  0 39  0  0 39  0  0 39  1  0]
[40  0  0 40  3  0 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0
 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0
 49  0  0 49  0  0 49  0  0 49  0  0]
[40  0  0 40  0  0 40  3  0 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0
 49  0  0 49  0  0 49  0  0 49  3  0 58  0  0 58  0  0 58  2  0 59  0  0
 59  0  0 59  0  0 59  3  0 68  0  0]
[40  2  0 41  0  0 41  0  0 41  0  0 41  0  0 41  0  0 41  0  0 41  3  0
 50  2  0 51  0  0 51  2  0 52  1  0 43  0  0 43  0  0 43  0  0 43  0  0
 43  4  0 42  0  0 42  3  0 51  0  0]
[40  0  0 40  1  0 31  2  0 32  1  0 23  0  0 23  3  0 32  2  0 33  1  0
 24  3  0 33  4  0 32  2  0 33  0  0 33  0  0 33  2  0 34  3  0 43  3  0
 52  0  0 52  3  0 61  0  0 61  3  0]
[40  0  0 40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  0  0
 76  0  0 76  0  0 76  3  0 76  0  0 76  3  0 76  3  0 76  0  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  0  0 58  3  0 67  0  0 67  3  0 76  4  0 75  3  0
 75  3  0 75  0  0 75  3  0 75  0  0 75  3  0 75  4  0 74  0  0 74  3  0
 74  3  0 74  0  0 74  0  0 74  0  0]
[40  4  0 39  3  0 48  3  0 57  1  0 48  3  0 57  0  0 57  3  0 66  3  0
 75  3  0 75  3  0 75  1  0 66  3  0 75  4  0 74  0  0 74  4  0 73  3  0
 73  2  0 74  3  0 74  3  0 74  1  0]
[40  0  0 40  2  0 41  3  0 50  3  0 59  2  0 60  0  0 60  2  0 61  3  0
 70  3  0 79  3  0 79  1  0 70  3  0 79  0  0 79  3  0 79  2  0 80  0  0
 80  0  0 80  3  0 80  3  0 80  3  0]
[40  0  0 40  0  0 40  0  0 40  3  0 49  3  0 58  3  0 67  3  0 76  3  0
 76  3  0 76  1  0 67  3  0 76  3  0 76  3  0 76  3  0 76  1  0 67  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  0  0 76  1  0 67  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  1  0 67  3  0
 76  0  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  0  0 49  3  0 58  3  0 67  1  0 58  3  0 67  0  0 67  3  0
 76  0  0 76  3  0 76  1  0 67  3  0 76  3  0 76  3  0 76  1  0 67  3  0
 76  3  0 76  3  0 76  3  0 76  1  0]
[40  1  0 31  0  0 31  3  0 40  3  0 49  2  0 50  3  0 59  2  0 60  3  0
 69  1  0 60  3  0 69  0  0 69  1  0 60  1  0 51  1  0 42  2  0 43  3  0
 52  0  0 52  2  0 53  2  0 53  1  0]
[40  2  0 41  3  0 50  0  0 50  0  0 50  0  0 50  1  0 41  3  0 50  0  0
 50  2  0 51  4  0 50  1  0 41  2  0 42  2  0 43  0  0 43  3  0 52  1  0
 43  0  0 43  4  0 42  0  0 42  3  0]
[40  3  0 49  3  0 58  3  0 67  0  0 67  4  0 66  1  0 57  3  0 66  3  0
 75  0  0 75  3  0 75  4  0 74  0  0 74  4  0 73  2  0 74  3  0 74  3  0
 74  2  0 75  1  0 66  2  0 67  1  0]
[40  1  0 31  2  0 32  0  0 32  3  0 41  0  0 41  1  0 32  1  0 23  0  0
 23  3  0 32  3  0 41  3  0 50  1  0 41  2  0 42  0  0 42  3  0 51  3  0
 60  3  0 69  0  0 69  0  0 69  3  0]
[40  3  0 49  1  0 40  3  0 49  0  0 49  2  0 50  3  0 59  3  0 68  3  0
 77  2  0 78  3  0 78  1  0 69  3  0 78  3  0 78  4  0 77  0  0 77  3  0
 77  2  0 78  0  0 78  1  0 69  0  0]
[40  0  0 40  1  0 31  3  0 40  3  0 49  2  0 50  2  0 51  3  0 60  3  0
 69  1  0 60  1  0 51  3  0 60  0  0 60  4  0 59  3  0 68  1  0 59  3  0
 68  3  0 77  3  0 77  0  0 77  1  0]
[40  3  0 49  2  0 50  4  0 49  4  0 48  1  0 39  0  0 39  1  0 30  1  0
 21  0  0 21  4  0 20  0  0 20  3  0 29  4  0 28  2  0 29  3  0 38  0  0
 38  2  0 39  3  0 48  2  0 49  0  0]
[40  1  0 31  0  0 31  3  0 40  3  0 49  2  0 50  4  0 49  0  0 49  1  0
 40  0  0 40  3  0 49  3  0 58  3  0 67  0  0 67  0  0 67  0  0 67  0  0
 67  3  0 76  1  0 67  3  0 76  1  0]
[40  1  0 31  3  0 40  4  0 39  4  0 38  3  0 47  2  0 48  3  0 57  3  0
 66  3  0 75  4  0 74  2  0 75  0  0 75  4  0 74  1  0 65  4  0 64  3  0
 73  3  0 73  3  0 73  4  0 72  1  0]
[40  3  0 49  2  0 50  1  0 41  4  0 40  3  0 49  1  0 40  3  0 49  2  0
 50  0  0 50  3  0 59  3  0 68  4  0 67  2  0 68  0  0 68  3  0 77  0  0
 77  3  0 77  3  0 77  3  0 77  3  0]
[40  0  0 40  0  0 40  2  0 41  2  0 42  2  0 43  4  0 42  0  0 42  4  0
 41  1  0 32  1  0 23  1  0 14  0  0 14  2  0 15  3  0 24  2  0 25  2  0

  0%|▏                                                                                                           | 30/20000 [00:03<21:01, 15.83it/s]
[40  3  0 49  0  0 49  1  0 40  0  0 40  3  0 49  3  0 58  4  0 57  3  0
 66  0  0 66  2  0 67  0  0 67  1  0 58  3  0 67  2  0 68  1  0 59  0  0
 59  2  0 60  0  0 60  2  0 61  0  0]
[40  0  0 40  1  0 31  3  0 40  0  0 40  2  0 41  3  0 50  3  0 59  4  0
 58  2  0 59  2  0 60  4  0 59  1  0 50  0  0 50  3  0 59  0  0 59  4  0
 58  2  0 59  0  0 59  3  0 68  3  0]
[40  1  0 31  2  0 32  4  0 31  4  0 30  4  0 29  2  0 30  3  0 39  3  0
 48  3  0 57  4  0 56  1  0 47  4  0 46  3  0 55  3  0 64  2  0 65  1  0
 56  4  0 55  3  0 64  2  0 65  1  0]
[40  4  0 39  4  0 38  0  0 38  1  0 29  2  0 30  4  0 29  2  0 30  0  0
 30  0  0 30  3  0 39  0  0 39  0  0 39  0  0 39  1  0 30  0  0 30  3  0
 39  2  0 40  0  0 40  3  0 49  3  0]
[40  2  0 41  3  0 50  1  0 41  0  0 41  2  0 42  0  0 42  2  0 43  2  0
 44  3  0 53  3  0 62  4  0 61  0  0 61  1  0 52  4  0 51  0  0 51  3  0
 60  1  0 51  2  0 52  0  0 52  1  0]
[40  2  0 41  2  0 42  4  0 41  2  0 42  1  0 33  0  0 33  3  0 42  0  0
 42  1  0 33  4  0 32  2  0 33  3  0 42  0  0 42  2  0 43  1  0 34  2  0
 35  0  0 35  3  0 44  0  0 44  0  0]
[40  1  0 31  0  0 31  4  0 30  3  0 39  2  0 40  1  0 31  1  0 22  2  0
 23  2  0 24  2  0 25  4  0 24  2  0 25  0  0 25  1  0 16  3  0 25  0  0
 25  3  0 34  1  0 25  0  0 25  2  0]
[40  0  0 40  2  0 41  2  0 42  3  0 51  1  0 42  4  0 41  3  0 50  1  0
 41  2  0 42  1  0 33  1  0 24  2  0 25  2  0 26  3  0 35  1  0 26  3  0
 35  3  0 44  4  0 43  0  0 43  1  0]
[40  2  0 41  0  0 41  4  0 40  2  0 41  4  0 40  2  0 41  3  0 50  4  0
 49  1  0 40  3  0 49  0  0 49  1  0 40  3  0 49  1  0 40  0  0 40  0  0
 40  3  0 49  3  0 58  2  0 59  4  0]
[40  3  0 49  3  0 58  4  0 57  3  0 66  1  0 57  1  0 48  2  0 49  2  0
 50  1  0 41  3  0 50  3  0 59  3  0 68  1  0 59  0  0 59  4  0 58  1  0
 49  3  0 58  1  0 49  0  0 49  0  0]
[40  2  0 41  3  0 50  0  0 50  1  0 41  4  0 40  0  0 40  2  0 41  0  0
 41  4  0 40  4  0 39  0  0 39  1  0 30  1  0 21  3  0 30  4  0 29  3  0
 38  3  0 47  2  0 48  2  0 49  0  0]
[40  3  0 49  2  0 50  2  0 51  1  0 42  2  0 43  1  0 34  0  0 34  3  0
 43  0  0 43  1  0 34  3  0 43  3  0 52  4  0 51  1  0 42  1  0 33  1  0
 24  3  0 33  2  0 34  0  0 34  1  0]
[40  1  0 31  1  0 22  1  0 13  1  0  4  3  0 13  1  0  4  4  0  3  1  0
  3  4  0  2  3  0 11  1  0  2  0  0  2  4  0  1  4  0  0  3  0  9  4  0
  0%|▏                                                                                                           | 40/20000 [00:03<32:56, 10.10it/s]
Traceback (most recent call last):
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/./scripts/data_generation.py", line 197, in <module>
    main()
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/./scripts/data_generation.py", line 186, in main
    train_tasks = generate_histories(
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/./scripts/data_generation.py", line 63, in generate_histories
    curr_history = generator.train_from_model(
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/algorithms/generation_baselines/a2c.py", line 132, in train_from_model
    model, histories = train(config, environment)
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/algorithms/generation_baselines/a2c.py", line 328, in train
    optimizer.step()
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/optim/optimizer.py", line 391, in wrapper
    out = func(*args, **kwargs)
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/optim/optimizer.py", line 76, in _use_grad
    ret = func(self, *args, **kwargs)
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/optim/adam.py", line 168, in step
    adam(
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/optim/adam.py", line 318, in adam
    func(params,
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/optim/adam.py", line 393, in _single_tensor_adam
    exp_avg.lerp_(grad, 1 - beta1)
KeyboardInterrupt
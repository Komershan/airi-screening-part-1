[34m[1mwandb[39m[22m: [33mWARNING[39m Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/cuda/__init__.py:619: UserWarning: Can't initialize NVML
  warnings.warn("Can't initialize NVML")
/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/gymnasium/core.py:311: UserWarning: [33mWARN: env.set_seed to get variables from other wrappers is deprecated and will be removed in v1.0, to get this variable you can do `env.unwrapped.set_seed` for environment variables or `env.get_wrapper_attr('set_seed')` that will search the reminding wrappers.
  logger.warn(
  0%|                                                                                                                     | 0/15000 [00:00<?, ?it/s]
[40  3  0 49  0  0 49  0  0 49  0  0 49  0  0 49  3  0 58  0  0 58  3  0
 67  0  0 67  0  0 67  0  0 67  0  0 67  0  0 67  0  0 67  4  0 66  4  0
 65  0  0 65  0  0 65  0  0 65  3  0]
[40  0  0 40  3  0 49  0  0 49  0  0 49  0  0 49  1  0 40  0  0 40  3  0
 49  0  0 49  4  0 48  0  0 48  0  0 48  0  0 48  3  0 57  0  0 57  0  0
 57  0  0 57  0  0 57  3  0 66  0  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  4  0 39  0  0 39  0  0
 39  0  0 39  0  0 39  0  0 39  0  0 39  3  0 48  0  0 48  0  0 48  0  0
 48  0  0 48  0  0 48  0  0 48  0  0]
[40  0  0 40  0  0 40  3  0 49  0  0 49  0  0 49  0  0 49  0  0 49  4  0
 48  0  0 48  0  0 48  0  0 48  0  0 48  4  0 47  2  0 48  1  0 39  0  0
 39  3  0 48  0  0 48  0  0 48  0  0]
[40  4  0 39  0  0 39  0  0 39  0  0 39  4  0 38  3  0 47  3  0 56  3  0
 65  3  0 74  3  0 74  0  0 74  0  0 74  0  0 74  0  0 74  0  0 74  0  0
 74  0  0 74  0  0 74  0  0 74  0  0]
[40  0  0 40  4  0 39  4  0 38  0  0 38  0  0 38  3  0 47  0  0 47  4  0
 46  4  0 45  0  0 45  4  0 45  0  0 45  4  0 45  3  0 54  0  0 54  0  0
 54  0  0 54  4  0 54  3  0 63  4  0]
[40  4  0 39  4  0 38  4  0 37  0  0 37  4  0 36  4  0 36  0  0 36  4  0
 36  3  0 45  0  0 45  0  0 45  4  0 45  0  0 45  0  0 45  4  0 45  4  0
 45  3  0 54  0  0 54  4  0 54  0  0]
[40  0  0 40  0  0 40  1  0 31  4  0 30  4  0 29  0  0 29  0  0 29  0  0
 29  0  0 29  0  0 29  3  0 38  0  0 38  0  0 38  0  0 38  3  0 47  4  0
 46  4  0 45  4  0 45  3  0 54  0  0]
[40  4  0 39  0  0 39  4  0 38  4  0 37  4  0 36  4  0 36  0  0 36  0  0
 36  4  0 36  0  0 36  0  0 36  0  0 36  3  0 45  0  0 45  0  0 45  0  0
 45  0  0 45  0  0 45  0  0 45  0  0]
[40  0  0 40  0  0 40  4  0 39  4  0 38  4  0 37  0  0 37  4  0 36  4  0
 36  3  0 45  0  0 45  4  0 45  4  0 45  4  0 45  1  0 36  4  0 36  4  0
 36  4  0 36  4  0 36  0  0 36  0  0]
[40  4  0 39  0  0 39  3  0 48  4  0 47  0  0 47  0  0 47  4  0 46  4  0
 45  0  0 45  4  0 45  4  0 45  4  0 45  4  0 45  4  0 45  0  0 45  0  0
 45  4  0 45  4  0 45  4  0 45  4  0]
[40  0  0 40  0  0 40  4  0 39  4  0 38  0  0 38  0  0 38  4  0 37  4  0
 36  4  0 36  4  0 36  0  0 36  4  0 36  3  0 45  0  0 45  4  0 45  4  0
 45  4  0 45  0  0 45  4  0 45  4  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  4  0 39  0  0 39  4  0 38  3  0
 47  4  0 46  0  0 46  4  0 45  1  0 36  3  0 45  2  0 46  4  0 45  4  0
 45  4  0 45  0  0 45  4  0 45  4  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  4  0 39  0  0 39  4  0 38  0  0
 38  0  0 38  0  0 38  4  0 37  0  0 37  4  0 36  0  0 36  3  0 45  0  0
 45  4  0 45  0  0 45  0  0 45  4  0]
[40  0  0 40  3  0 49  0  0 49  0  0 49  0  0 49  4  0 48  0  0 48  0  0
 48  0  0 48  0  0 48  4  0 47  0  0 47  3  0 56  0  0 56  0  0 56  0  0
 56  4  0 55  4  0 54  4  0 54  0  0]
[40  0  0 40  0  0 40  4  0 39  4  0 38  0  0 38  0  0 38  3  0 47  3  0
 56  4  0 55  0  0 55  0  0 55  0  0 55  0  0 55  0  0 55  0  0 55  0  0
 55  0  0 55  0  0 55  0  0 55  4  0]
[40  4  0 39  0  0 39  4  0 38  0  0 38  0  0 38  0  0 38  0  0 38  0  0
 38  3  0 47  0  0 47  4  0 46  0  0 46  4  0 45  4  0 45  4  0 45  0  0
 45  3  0 54  0  0 54  0  0 54  0  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  4  0 39  1  0 30  4  0 29  0  0
 29  0  0 29  1  0 20  0  0 20  4  0 19  0  0 19  0  0 19  3  0 28  4  0
 27  0  0 27  0  0 27  0  0 27  0  0]
[40  4  0 39  0  0 39  0  0 39  0  0 39  0  0 39  0  0 39  0  0 39  0  0
 39  0  0 39  0  0 39  0  0 39  3  0 48  0  0 48  0  0 48  0  0 48  0  0
 48  3  0 57  0  0 57  0  0 57  4  0]
[40  0  0 40  0  0 40  0  0 40  3  0 49  4  0 48  0  0 48  0  0 48  0  0
 48  0  0 48  0  0 48  4  0 47  0  0 47  4  0 46  0  0 46  4  0 45  0  0
 45  0  0 45  0  0 45  4  0 45  0  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0
 40  0  0 40  4  0 39  0  0 39  0  0 39  0  0 39  0  0 39  0  0 39  0  0
 39  0  0 39  3  0 48  0  0 48  0  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  3  0
 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0
 49  0  0 49  4  0 48  0  0 48  0  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0
 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  0  0
 40  4  0 39  0  0 39  0  0 39  0  0]
[40  4  0 39  0  0 39  4  0 38  0  0 38  4  0 37  0  0 37  4  0 36  3  0
 45  0  0 45  0  0 45  0  0 45  0  0 45  0  0 45  4  0 45  0  0 45  4  0
 45  4  0 45  0  0 45  0  0 45  4  0]
[40  0  0 40  0  0 40  3  0 49  4  0 48  0  0 48  0  0 48  4  0 47  4  0
 46  0  0 46  0  0 46  0  0 46  0  0 46  4  0 45  4  0 45  0  0 45  3  0
 54  0  0 54  0  0 54  0  0 54  0  0]
[40  0  0 40  0  0 40  1  0 31  4  0 30  0  0 30  0  0 30  4  0 29  1  0
 20  1  0 11  0  0 11  3  0 20  2  0 21  0  0 21  3  0 30  3  0 39  0  0
 39  0  0 39  3  0 48  4  0 47  4  0]
[40  0  0 40  0  0 40  4  0 39  0  0 39  4  0 38  0  0 38  4  0 37  0  0
 37  2  0 38  3  0 47  4  0 46  0  0 46  0  0 46  0  0 46  4  0 45  0  0
 45  0  0 45  0  0 45  0  0 45  3  0]
[40  3  0 49  0  0 49  0  0 49  0  0 49  4  0 48  0  0 48  0  0 48  0  0
 48  0  0 48  0  0 48  0  0 48  0  0 48  0  0 48  0  0 48  4  0 47  0  0
 47  0  0 47  0  0 47  0  0 47  0  0]
[40  4  0 39  4  0 38  0  0 38  0  0 38  0  0 38  0  0 38  0  0 38  4  0
 37  0  0 37  4  0 36  0  0 36  0  0 36  0  0 36  4  0 36  1  0 27  4  0
 27  0  0 27  0  0 27  0  0 27  0  0]
[40  0  0 40  3  0 49  4  0 48  0  0 48  0  0 48  0  0 48  0  0 48  0  0
 48  4  0 47  2  0 48  0  0 48  4  0 47  0  0 47  0  0 47  4  0 46  0  0
 46  0  0 46  3  0 55  4  0 54  0  0]
[40  1  0 31  0  0 31  0  0 31  0  0 31  0  0 31  0  0 31  3  0 40  4  0
 39  0  0 39  0  0 39  0  0 39  0  0 39  4  0 38  3  0 47  0  0 47  0  0
 47  0  0 47  0  0 47  0  0 47  3  0]
[40  4  0 39  4  0 38  0  0 38  0  0 38  4  0 37  0  0 37  0  0 37  3  0
 46  3  0 55  4  0 54  0  0 54  3  0 63  4  0 63  4  0 63  4  0 63  0  0
 63  4  0 63  0  0 63  0  0 63  0  0]
[40  0  0 40  3  0 49  0  0 49  0  0 49  0  0 49  4  0 48  4  0 47  4  0
 46  0  0 46  4  0 45  4  0 45  0  0 45  4  0 45  0  0 45  0  0 45  3  0
 54  4  0 54  0  0 54  0  0 54  0  0]
[40  4  0 39  4  0 38  0  0 38  4  0 37  0  0 37  0  0 37  3  0 46  4  0
 45  0  0 45  0  0 45  4  0 45  0  0 45  4  0 45  0  0 45  4  0 45  0  0
 45  4  0 45  4  0 45  0  0 45  0  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  0  0 40  3  0 49  4  0 48  0  0
 48  4  0 47  4  0 46  0  0 46  3  0 55  0  0 55  4  0 54  0  0 54  0  0
 54  0  0 54  4  0 54  4  0 54  0  0]
[40  0  0 40  0  0 40  3  0 49  0  0 49  0  0 49  0  0 49  0  0 49  0  0
 49  0  0 49  4  0 48  0  0 48  4  0 47  4  0 46  0  0 46  0  0 46  3  0
 55  4  0 54  0  0 54  0  0 54  4  0]
[40  4  0 39  3  0 48  0  0 48  3  0 57  3  0 66  0  0 66  0  0 66  0  0
 66  0  0 66  3  0 75  3  0 75  0  0 75  0  0 75  4  0 74  0  0 74  3  0
 74  0  0 74  0  0 74  0  0 74  0  0]
[40  0  0 40  0  0 40  0  0 40  4  0 39  0  0 39  0  0 39  3  0 48  0  0
 48  3  0 57  0  0 57  0  0 57  0  0 57  0  0 57  3  0 66  0  0 66  3  0
 75  3  0 75  0  0 75  0  0 75  4  0]
[40  0  0 40  4  0 39  0  0 39  0  0 39  3  0 48  3  0 57  0  0 57  0  0
 57  0  0 57  0  0 57  3  0 66  3  0 75  0  0 75  0  0 75  3  0 75  0  0
 75  0  0 75  0  0 75  0  0 75  0  0]
[40  3  0 49  4  0 48  0  0 48  0  0 48  3  0 57  4  0 56  0  0 56  3  0
 65  0  0 65  0  0 65  0  0 65  0  0 65  0  0 65  0  0 65  2  0 66  0  0
 66  3  0 75  0  0 75  0  0 75  3  0]
[40  0  0 40  0  0 40  3  0 49  4  0 48  0  0 48  4  0 47  3  0 56  3  0
 65  3  0 74  4  0 73  0  0 73  0  0 73  3  0 73  3  0 73  3  0 73  3  0

  0%|â–Ž                                                                                                           | 49/15000 [00:03<09:15, 26.92it/s]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  1  0 67  0  0
 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  0  0 76  3  0 76  0  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  0  0]
[40  0  0 40  1  0 31  3  0 40  3  0 49  3  0 58  3  0 67  3  0 76  3  0
 76  0  0 76  3  0 76  0  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  0  0 40  3  0 49  0  0 49  3  0 58  3  0 67  3  0 76  0  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  0  0 76  0  0 76  3  0 76  0  0 76  0  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  4  0 39  0  0 39  0  0 39  3  0 48  0  0 48  3  0 57  3  0 66  3  0
 75  3  0 75  3  0 75  3  0 75  3  0 75  3  0 75  3  0 75  3  0 75  3  0
 75  0  0 75  3  0 75  3  0 75  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  0  0 76  0  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  0  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  0  0 76  3  0]
[40  0  0 40  0  0 40  1  0 31  3  0 40  0  0 40  3  0 49  3  0 58  3  0
 67  3  0 76  3  0 76  3  0 76  0  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  0  0 40  0  0 40  0  0 40  0  0 40  3  0 49  0  0 49  1  0 40  0  0
 40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  0  0 76  0  0
 76  3  0 76  3  0 76  0  0 76  0  0]
[40  0  0 40  4  0 39  0  0 39  3  0 48  0  0 48  0  0 48  0  0 48  3  0
 57  3  0 66  3  0 75  0  0 75  0  0 75  0  0 75  3  0 75  0  0 75  0  0
 75  0  0 75  3  0 75  0  0 75  3  0]
[40  3  0 49  0  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0
 76  0  0 76  3  0 76  3  0 76  0  0 76  0  0 76  3  0 76  3  0 76  0  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  0  0 40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  0  0 67  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  0  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  0  0 40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  0  0 40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0]
[40  3  0 49  3  0 58  3  0 67  3  0 76  3  0 76  3  0 76  3  0 76  3  0
 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0 76  3  0
  1%|â–Œ                                                                                                           | 76/15000 [00:04<15:02, 16.54it/s]
Traceback (most recent call last):
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/./scripts/data_generation.py", line 197, in <module>
    main()
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/./scripts/data_generation.py", line 186, in main
    train_tasks = generate_histories(
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/./scripts/data_generation.py", line 63, in generate_histories
    curr_history = generator.train_from_model(
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/algorithms/generation_baselines/a2c.py", line 134, in train_from_model
    model, histories = train(config, environment)
  File "/home/aaderevyagin/airi_final/airi-screening-part-1/algorithms/generation_baselines/a2c.py", line 327, in train
    optimizer.step()
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/optim/optimizer.py", line 391, in wrapper
    out = func(*args, **kwargs)
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/optim/optimizer.py", line 76, in _use_grad
    ret = func(self, *args, **kwargs)
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/optim/adam.py", line 168, in step
    adam(
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/optim/adam.py", line 318, in adam
    func(params,
  File "/home/aaderevyagin/airi_final/venv/lib/python3.10/site-packages/torch/optim/adam.py", line 441, in _single_tensor_adam
    denom = (exp_avg_sq.sqrt() / bias_correction2_sqrt).add_(eps)
KeyboardInterrupt